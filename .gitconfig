[core]
  excludesfile = ~/.gitignore-global
[user]
  name = Scott Bronson
  email = brons_git@rinspin.com
[push]
  # push should only push current branch, not all branches
  default = current
[branch]
  # git pull should always rebase
  autosetuprebase = always
[help]
  autocorrect = 1

[color]
  ui = auto
[color "branch"]
  current = yellow reverse
  local = yellow
  remote = green
[color "diff"]
  commit = green bold
  meta = green bold
  frag = green bold
  func = green
  plain = yellow
  old = red
  new = cyan
[color "status"]
  added = yellow
  changed = green
  untracked = cyan

[alias]
  watch = "!watch -n 0.3 'git status --short --branch; echo; git --no-pager diff --shortstat;'"

  a     = add
  ae    = add --edit
  ai    = add --interactive
  ap    = add --patch
  au    = add --update
  b     = branch
  ba    = branch -a
  bls   = branch -v # list branches with last commit in
  ; brm   = branch -d # remove if branch-to-be-removed if fully merged into HEAD
  ; brmf  = branch -D # force removal
  bmv   = branch -m
  ; cg    = config --global
  ; ceg   = config --global --edit
  ; clg   = config --global --list
  ; c     = config
  ; cl    = config --list
  ; ce    = config --edit
  co    = checkout
  cob   = checkout -b
  com   = "!f() { git fetch; git checkout -b master origin/master; }; f"
  cot   = "!f() { git fetch; git checkout -b ${1##*/} $1; }; f "
  #coe   = "!f() { git symbolic-ref HEAD refs/heads/${1:-empty}; rm .git/index; git clean -fdx; git commit --allow-empty -m 'empty, clean branch'; }; f"
  ca    = "!f() { git add $1; git ci -v $1; }; f"
  ci    = commit -v --untracked-files=no
  cia   = commit -v -a --untracked-files=no
  ciab  = !B=$(git symbolic-ref HEAD 2>/dev/null) && git commit -v -a --edit -m "${B##refs/heads/}:" --untracked-files=no
  cii   = commit --interactive
  cim   = commit -m
  cip   = commit -am '[...in progress...]'
  cir   = reset HEAD^
  d     = diff
  dc    = diff --cached
  do    = diff ORIG_HEAD..
  ds    = diff --stat=120,130 -M -C
  dy    = diff --summary -M -C
  em    = "!${EDITOR:-vim} $(git ls-files --modified)"
  eo    = "!${EDITOR:-vim} $(git ls-files --other)"
  k     = "!gitk &"
  l     = log --date=relative
  lg    = !git ll --graph
  ll    = log --abbrev-commit --date=relative --pretty=format:'%C(yellow)%h%Creset %s %Cgreen(%cr) %C(bold blue) %an %Creset%C(red)%d'
  lol   = log --oneline --abbrev-commit --graph --decorate
  lp    = log --patch --date=relative
  lpw   = log --patch --word-diff --date=relative
  ls    = log --stat=120,130 --date=relative
  lu    = log ORIG_HEAD.. --stat --no-merges --date=relative
  po    = push origin HEAD
  poh   = push origin HEAD
  pu    = pull
  pr    = pull --rebase
  up    = pull --rebase
  r     = rebase
  ra    = rebase --abort
  rc    = rebase --continue
  ri    = rebase --interactive
  rm-a  = "!git ls-files -z --deleted | xargs -0 git rm"
  s     = status -sb
  st    = status --short --branch --untracked-files=no
  sta   = status --short --branch --untracked-files=normal
  sync  = !git pull && git push
  ta    = tag -a


# http://bit.ly/g9c9Y2    (allows: git clone gh:rails/rails)
[url "http://github.com/"]
  insteadOf = "gh:"
[url "git@github.com:"]
  pushInsteadOf = "https://github.com/"
  pushInsteadOf = "http://github.com/"
  pushInsteadOf = "gh:"

[url "git@github.com:bronson/"]
  pushInsteadOf = "my:"
[url "http://github.com/bronson/"]
  insteadOf = "my:"

[url "https://gist.github.com/"]
  insteadOf = "gist:"
[url "git@gist.github.com:"]
  pushInsteadOf = "https://gist.github.com/"
  pushInsteadOf = "http://gist.github.com/"
  pushInsteadOf = "gist:"

[init]
  templatedir = ~/.git_template
